// <auto-generated />
using System;
using ForTheFamApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ForTheFamApp.Migrations
{
    [DbContext(typeof(ForTheFamAppContext))]
    partial class ForTheFamAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ForTheFamApp.Models.ForumComment", b =>
                {
                    b.Property<int>("ForumCommentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("ImgUrl");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("ForumCommentId");

                    b.HasIndex("UserId");

                    b.ToTable("ForumComments");
                });

            modelBuilder.Entity("ForTheFamApp.Models.ForumPost", b =>
                {
                    b.Property<int>("ForumPostId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("ForumMsg")
                        .IsRequired();

                    b.Property<string>("ImgUrl");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("ForumPostId");

                    b.HasIndex("UserId");

                    b.ToTable("ForumPosts");
                });

            modelBuilder.Entity("ForTheFamApp.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AmazonProductUrl")
                        .IsRequired();

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("ImgUrl");

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<int>("ProductPostId");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("ForTheFamApp.Models.ProductPost", b =>
                {
                    b.Property<int>("ProductPostId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("ForumMsg")
                        .IsRequired();

                    b.Property<int>("PostId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("ProductPostId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductPosts");
                });

            modelBuilder.Entity("ForTheFamApp.Models.ProfilePost", b =>
                {
                    b.Property<int>("ProfilePostId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AuthorUserId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("ForumMsg")
                        .IsRequired();

                    b.Property<int>("ProfilePostAuthor");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("UserProfileId");

                    b.HasKey("ProfilePostId");

                    b.HasIndex("AuthorUserId");

                    b.ToTable("ProfilePosts");
                });

            modelBuilder.Entity("ForTheFamApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("ProfilePostId");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ForTheFamApp.Models.ForumComment", b =>
                {
                    b.HasOne("ForTheFamApp.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForTheFamApp.Models.ForumPost", b =>
                {
                    b.HasOne("ForTheFamApp.Models.User", "Author")
                        .WithMany("ForumPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForTheFamApp.Models.Post", b =>
                {
                    b.HasOne("ForTheFamApp.Models.User", "Author")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForTheFamApp.Models.ProductPost", b =>
                {
                    b.HasOne("ForTheFamApp.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ForTheFamApp.Models.ProfilePost", b =>
                {
                    b.HasOne("ForTheFamApp.Models.User", "Author")
                        .WithMany("ProfilePosts")
                        .HasForeignKey("AuthorUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
